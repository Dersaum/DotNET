using System;
using ExemploPOO.Helper;
using ExemploPOO.Interfaces;
using ExemploPOO.Models;

namespace ExemploPOO
{
    class Program
    {
        static void Main(string[] args)
        {
            // //8 - Exercício Manipulando arquivos
            // var caminho = "D:\\Downloads\\Programação\\Dev\\C#\\CSharpVSCode\\Programando com Orientação a Objeto com C#\\TrabalhandoComArquivos";
            // var caminhoPathCombine = Path.Combine(caminho, "Pasta teste 1");
            // var caminhoArquivo = Path.Combine(caminho, "arquivo-teste-stream.txt");
            // var caminhoArquivoTeste = Path.Combine(caminho, "arquivo-teste.txt");
            // var caminhoArquivoTesteCopia = Path.Combine(caminho, "arquivo-teste-bkp.txt");
            // var novoCaminhoArquivo = Path.Combine(caminho, "Pasta Teste 2", "arquivo-teste-stream.txt");

            // var listaString = new List<string> { "Linha 1", "Linha 2", "Linha 3"};
            // var listaStringContinuacao = new List<string> { "Linha 4", "Linha 5", "Linha 6"};

            // FileHelper helper = new FileHelper();
            
            // //parte 1
            //helper.ListarDiretorios(caminho);
            
            // //parte 2
            //helper.ListarArquivosDiretorios(caminho);
            
            // //parte 3
            // System.Console.WriteLine("Criando diretório: " + caminhoPathCombine);
            // helper.CriarDiretorio(caminhoPathCombine);
            
            // //parte 4
            // helper.ApagarDiretorio(caminhoPathCombine, true);

            // //parte 5
            // helper.CriarArquivoTexto(caminhoArquivo, "Olá! Teste de escrita de arquivo");

            // //parte 6, 7
            // helper.CriarArquivoTextoStream(caminhoArquivo, listaString);
            // helper.AdicionarTextoStream(caminhoArquivo, listaStringContinuacao);

            // //parte 8
            // helper.LerArquivoStream(caminhoArquivo);

            // //parte 9
            // helper.MoverArquivo(caminhoArquivo, novoCaminhoArquivo, false);

            // //parte 10
            // helper.CopiarArquivo(caminhoArquivoTeste, caminhoArquivoTesteCopia, false);

            //parte 11
            //helper.DeletarArquivo(caminhoArquivoTesteCopia);



            // //7 - Exercício Interfaces na prática
            // ICalculadora calc = new Calculadora();
            // System.Console.WriteLine(calc.Multiplicar(30,20));



            // //6 - Exercício Classe object na prática
            // Computador comp = new Computador();
            // System.Console.WriteLine(comp.ToString());



            // //5 - Exercício Classes abstratas
            // Corrente c = new Corrente();
            // c.Creditar(350);

            // c.ExibirSaldo();



            // //4 - Exercício Polimorfismo em tempo de compilação
            // Calculadora calc = new Calculadora();
            // System.Console.WriteLine("Resultado da primeira soma: " + calc.Somar(50,40));
            // System.Console.WriteLine("Resultado da segunda soma: " + calc.Somar(20,30,50));
            

            
            // //3 - Exercício Polimorfismo em tempo de execução
            // Aluno p1 = new Aluno();
            // p1.Nome = "Pedro";
            // p1.Idade = 20;
            // p1.Documento = "123456";
            // p1.Nota = 10;
            // p1.Apresentar();

            // Professor p2 = new Professor();
            // p2.Nome = "Ze";
            // p2.Idade = 20;
            // p2.Documento = "123456";
            // p2.Salario = 2000;
            // p2.Apresentar();



            // //2 - Exercício Retangulo
            // //Valores válidos
            // Retangulo r = new Retangulo();
            // r.DefinirMedidas(30, 30);
            
            // System.Console.WriteLine($"Área: {r.ObterArea()}");

            // //Valores inválidos
            // Retangulo r2 = new Retangulo();
            // r2.DefinirMedidas(0, 0);
            
            // System.Console.WriteLine($"Área: {r2.ObterArea()}");



            //1 - Exercício Programa Pessoas
            // Pessoa p1 = new Pessoa();

            // p1.Nome = "Bob";
            // p1.Idade = 20;

            // p1.Apresentar();
        }
    }
}
